{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","request","endpoint","a","fetch","response","json","data","Response","FindMovie","React","memo","setMovies","useState","isInvalid","setInvalid","setMovie","titleRef","useRef","document","createElement","fetchMovie","title","current","value","res","undefined","htmlFor","type","id","ref","placeholder","classNames","onChange","onClick","find","m","App","ReactDOM","render","getElementById"],"mappings":"gUAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,+CCZRC,EAAO,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,+EAEIC,MAAM,GAAD,OALf,2BAKe,OAAeF,IAFxB,cAEbG,EAFa,gBAGAA,EAASC,OAHT,UAKG,WAFhBC,EAHa,QAKVC,SALU,yCAMV,MANU,gCASZD,GATY,2DAWZ,MAXY,0DAAH,sDCSPE,G,MAA6BC,IAAMC,MAAK,YAAoB,IAAjBC,EAAgB,EAAhBA,UACtD,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,qBAA1B,mBAAOvB,EAAP,KAAc0B,EAAd,KAEMC,EAAWC,iBAAOC,SAASC,cAAc,UAEzCC,EAAU,uCAAG,4BAAAlB,EAAA,sEDAImB,ECCML,EAASM,QAAQC,MDDLvB,EAAQ,YAAD,OAjBlC,UAiBkC,cAA0BqB,ICAvD,QACXG,EADW,QAOfT,EAASS,IAHTT,OAASU,GACTX,GAAW,IALI,iCDAG,IAACO,ICAJ,OAAH,qDAWhB,OACE,qCACE,uBAAM/B,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBAAOA,UAAU,QAAQoC,QAAQ,cAAjC,wBAEE,uBACEC,KAAK,OACLC,GAAG,cACHC,IAAKb,EACLc,YAAY,cACZxC,UAAWyC,IAAW,QAAS,CAAE,YAAalB,IAC9CmB,SAAU,WACJnB,GACFC,GAAW,WAOpBD,GACC,mBAAGvB,UAAU,iBAAb,oDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEqC,KAAK,SACLrC,UAAU,kBACV2C,QAAS,WACPb,KAJJ,sBAWF,qBAAK9B,UAAU,UAAf,SACE,wBACEqC,KAAK,SACLrC,UAAU,oBACV2C,QAAS,WACH5C,IACFsB,GAAU,SAACd,GACT,OAAIA,EAAOqC,MAAK,SAAAC,GAAC,OAAIA,EAAEpC,SAAWV,EAAMU,UAC/BF,EAGH,GAAN,mBAAWA,GAAX,CAAmBR,OAErB0B,OAASU,GACTT,EAASM,QAAQC,MAAQ,KAb/B,iCAuBN,sBAAKjC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCD,GAAS,cAAC,EAAD,CAAWA,MAAOA,cC1FvB+C,EAAgB,WAC3B,MAA4BxB,mBAAkB,IAA9C,mBAAOf,EAAP,KAAec,EAAf,KAEA,OACE,sBAAKrB,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWqB,UAAWA,UCZ9B0B,IAASC,OAAO,cAAC,EAAD,IAASpB,SAASqB,eAAe,W","file":"static/js/main.b5e2c6fb.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com';\nconst API_KEY = '746d0f7';\n\nexport const request = async (endpoint: string) => {\n  try {\n    const response = await fetch(`${BASE_URL}${endpoint}`);\n    const data = await response.json();\n\n    if (data.Response === 'False') {\n      return null;\n    }\n\n    return data;\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const getMovie = (title: string) => request(`/?apikey=${API_KEY}&t=${title}`);\n","import React, { useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api/api';\n\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  setMovies: (callback: (movies: Movie[]) => Movie[]) => void;\n};\n\nexport const FindMovie: React.FC<Props> = React.memo(({ setMovies }) => {\n  const [isInvalid, setInvalid] = useState(false);\n  const [movie, setMovie] = useState<Movie>();\n\n  const titleRef = useRef(document.createElement('input'));\n\n  const fetchMovie = async () => {\n    const res = await getMovie(titleRef.current.value);\n\n    if (!res) {\n      setMovie(undefined);\n      setInvalid(true);\n    } else {\n      setMovie(res);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <div className=\"control\">\n            <label className=\"label\" htmlFor=\"movie-title\">\n              Movie title\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                ref={titleRef}\n                placeholder=\"Enter title\"\n                className={classNames('input', { 'is-danger': isInvalid })}\n                onChange={() => {\n                  if (isInvalid) {\n                    setInvalid(false);\n                  }\n                }}\n              />\n            </label>\n          </div>\n\n          {isInvalid && (\n            <p className=\"help is-danger\">\n              Couldn&apos;t find movie with this title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                fetchMovie();\n              }}\n            >\n              Search\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (movie) {\n                  setMovies((movies) => {\n                    if (movies.find(m => m.imdbID === movie.imdbID)) {\n                      return movies;\n                    }\n\n                    return [...movies, movie];\n                  });\n                  setMovie(undefined);\n                  titleRef.current.value = '';\n                }\n              }}\n            >\n              Add to list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n});\n","import React, { useState } from 'react';\n\nimport './App.scss';\n\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}